name: Deploy to GCP
on:
  push:
    branches: [ deployment-gcp-production, deployment-gcp-staging ]
  workflow_dispatch:
    inputs:
      target:
        description: 'Target'
        required: true
        default: 'production'
        type: choice
        options:
          - 'staging'
          - 'production'

env:
  PROJECT: terraform-test-377910 # TODO: update Google Cloud project id
  # GAR_LOCATION: us-central1 # TODO: update Artifact Registry location
  # REPOSITORY: serverpod-containers # TODO: update Artifact Registry repository name
  REGION: us-central1 # TODO: update Cloud Run service region



jobs:
  deploy:
    name: Deploy to Google Cloud Run
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Setting Target Mode from Input
        if: ${{ github.event.inputs.target != '' }}
        run: echo "TARGET=${{ github.event.inputs.target }}" >> $GITHUB_ENV

      - name: Setting Target mode based on branch
        if: ${{ github.event.inputs.target == '' }}
        run: echo "TARGET=${GITHUB_REF##*-}" >> $GITHUB_ENV

      - name: Set repository
        run: echo "REPOSITORY=serverpod-${{ env.TARGET }}-container" >> $GITHUB_ENV

      - name: Set Image Name
        run: echo "IMAGE_NAME=$(echo ${GITHUB_REPOSITORY##*/}_$TARGET | sed 's/[^a-zA-Z0-9]/_/g')" >> $GITHUB_ENV

      - name: Set Service Name
        run: echo "SERVICE_NAME=$(echo $IMAGE_NAME | sed 's/[^a-zA-Z0-9]/-/g')" >> $GITHUB_ENV

      - name: Test
        run: echo $SERVICE_NAME


      - id: "auth"
        name: "Authenticate to Google Cloud"
        uses: "google-github-actions/auth@v1"
        with:
          credentials_json: "${{ secrets.GOOGLE_CREDENTIALS }}"

      - name: Create passwords file
        working-directory: gcp_server
        shell: bash
        env:
          SERVERPOD_PASSWORDS: ${{ secrets.SERVERPOD_PASSWORDS }}
        run: |
          pwd
          echo "$SERVERPOD_PASSWORDS" > config/passwords.yaml
          ls config/

      - name: Configure Docker
        run: gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev

      - name: Build the Docker image
        run: "cd gcp_server && docker build -t $IMAGE_NAME . --build-arg mode=$TARGET"

      - name: Tag the Docker image
        run: docker tag $IMAGE_NAME ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT }}/${{ env.REPOSITORY }}/$IMAGE_NAME

      - name: Push Docker image
        run: docker push ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT }}/${{ env.REPOSITORY }}/$IMAGE_NAME

      # - id: deploy
      #   name: Deploy Docker image to cloud run
      #   uses: "google-github-actions/deploy-cloudrun@v0"
      #   with:
      #     image: ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT }}/${{ env.REPOSITORY }}/${{ env.IMAGE_NAME }}
      #     region: ${{ env.REGION }}
      #     service: ${{ env.SERVICE_NAME }}
      #     flags:
      #       --port=8080
      #       --allow-unauthenticated
      #
      # - name: "Use output"
      #   run: 'curl "${{ steps.deploy.outputs.url }}"'
